{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkBhD,OAEE,sBAAMC,SAZa,SAAEC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SApBoB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,QCNfG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEnC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAOF,EAAMG,IAAOJ,IACzB,4BAAKA,Q,uBCLEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfN,EAFe,iDAEkCO,UAAUF,GAF5C,+DAGFG,MAAOR,GAHL,cAGfS,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAcdY,GAdc,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEhBpB,mBAAU,CAClC0B,KAAM,GACNQ,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAoB1C,OAbAC,qBAAW,WACTlB,EAASC,GACNkB,MAAM,SAAAC,GAEHH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAIhB,CAAEd,IAGEe,EDd2BK,CAAcpB,GAAlCW,EAJyB,EAI/BL,KAAcQ,EAJiB,EAIjBA,QAItB,OAEE,qCACE,oBAAIlB,UAAU,oCAAd,SAAoDI,IAClDc,GAAW,mBAAGlB,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEMe,EAAOH,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADEA,EAAIC,aEjBdW,EAAe,WAAO,IAAD,EAG9BzC,mBAAS,CAAC,SAHoB,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAKhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEI2C,EAAWd,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADJA,YCbrBuB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.9d043a48.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [ inputValue, setInputValue ] = useState('');\r\n\r\n  const handleInputChange = ( e ) => {\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = ( e ) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories( cats => [ inputValue, ...cats ] );\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <form onSubmit= { handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value= { inputValue }\r\n        onChange= { handleInputChange }\r\n      />\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src= { url } alt= { title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=t0BDmRm3lzbcEfmS23YRgjHL249FVopd`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      <div className=\"card-grid\">\r\n         {\r\n            images.map( img => (\r\n              <GifGridItem\r\n                key= { img.id }\r\n                { ...img }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState ({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });\r\n\r\n      });\r\n  }, [ category ])\r\n\r\n\r\n  return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] =\r\n    useState(['dogs']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories= { setCategories } />\r\n      <hr />\r\n\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category =>\r\n            <GifGrid\r\n              key= { category }\r\n              category={ category }\r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}